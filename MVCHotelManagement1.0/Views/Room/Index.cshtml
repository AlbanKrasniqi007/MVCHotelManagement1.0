@model MVCHotelManagement1._0.ViewModel.RoomViewModel
@{
    ViewBag.Title = "Index";
}

<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
</head>

<script src="~/Scripts/jquery-3.7.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {

        LoadRoomDetails();
        $("#txtRoomId").val("0");
        $("#btnSave").click(function () {
            SaveRoomData();
        });
    });

    function EditRoom(roomId) {
        $.ajax({
            async: true,
            type: 'GET',
            dataType: 'json',
            data: { roomId },
            url: '/Room/EditRoomDetails?roomId=' + roomId,
            success: function (data) {
                $("#txtRoomNumber").val(data.RoomNumber);
                $("#txtRoomPrice").val(data.RoomPrice);
                $("#ddBookingStatus").val(data.BookingStatusId);
                $("#ddRoomType").val(data.RoomTypeId);
                $("#txtRoomCapacity").val(data.RoomCapacity);
                $("#txtRoomDescription").val(data.RoomDescription);
                $("#imgRoom").attr('src', "../RoomImages/" + data.RoomImage);
                $("#divAddRoom").modal('show');
                $("#txtRoomId").val(data.RoomId);
                $("#btnSave").text("Update");
            },
            error: function () {
                alert('There is some problem processing your request.');
            }
        });
    }

    function DeleteRoom(roomId) {
        var result = confirm("Are you sure you want to delete this room?");
        if (!result) {
            return;
        }
        $.ajax({
            async: true,
            type: 'GET',
            dataType: 'json',
            data: { roomId },
            url: '/Room/DeleteRoomDetails?roomId=' + roomId,
            success: function (data) {
                if (data.success) {
                    alert(data.message);
                    LoadRoomDetails();
                }
            },
            error: function () {
                alert('There is some problem to process your request. Please try after sometimes.');
            }
        });
    }

    function LoadRoomDetails() {
        $.ajax({
            async: true,
            type: 'GET',
            dataType: 'html',
            contentType: false,
            processData: false,
            url: '/Room/GetAllRooms',
            success: function (data) {
                $("#divLoadRoomDetails").html(data);
            },
            error: function () {
                alert('There is some problem to process your request.');
            }
        });
    }

    function SaveRoomData() {
        var formData = new FormData();
        formData.append("RoomId", $("#txtRoomId").val());
        formData.append("RoomNumber", $("#txtRoomNumber").val());
        formData.append("RoomPrice", $("#txtRoomPrice").val());
        formData.append("BookingStatusId", $("#ddBookingStatus").val());
        formData.append("RoomTypeId", $("#ddRoomType").val());
        formData.append("RoomCapacity", $("#txtRoomCapacity").val());
        formData.append("RoomDescription", $("#txtRoomDescription").val());

        var imageFile = $("#UploadImage").get(0).files[0];
        if (imageFile) {
            formData.append("Image", imageFile);
        }

        $.ajax({
            async: true,
            type: 'POST',
            url: '/Room/Index',
            contentType: false,
            processData: false,
            data: formData,
            success: function (data) {
                if (data.success) {
                    alert(data.message);
                    ResetRoomInformation();
                    LoadRoomDetails();
                }
            },
            error: function () {
                alert('There is some problem to process your request. Please try after sometimes.');
            }
        });
    }

    function ResetRoomInformation() {
        $("#txtRoomId").val("0");
        $("#txtRoomNumber").val("");
        $("#txtRoomPrice").val("");
        $("#ddBookingStatus").val("");
        $("#ddRoomType").val("");
        $("#txtRoomCapacity").val("");
        $("#txtRoomDescription").val("");
        $("#UploadImage").val("");
        $("#imgRoom").attr('src', "");
        $("#btnSave").text("Add"); // Ensure the button text is "Add"
    }

    function DisplayImage(result) {
        if (result.files && result.files[0]) {
            var fileReader = new FileReader();
            fileReader.onload = function (e) {
                $("#imgRoom").attr('src', e.target.result);
            }
            fileReader.readAsDataURL(result.files[0]);
        }
    }
</script>

<div style="margin-top: 50px">
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#divAddRoom" data-backdrop="static" data-keyboard="false">Add Room</button>
</div>

<div id="divAddRoom" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Room</h4>
                <button type="button" class="close" data-bs-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form id="formRoom">
                    <div class="container">
                        @Html.HiddenFor(model => model.RoomId, new { @id = "txtRoomId" })
                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.RoomNumber)
                                @Html.TextBoxFor(model => model.RoomNumber, new { @class = "form-control", id = "txtRoomNumber" })
                                @Html.ValidationMessageFor(model => model.RoomNumber, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.RoomPrice)
                                @Html.TextBoxFor(model => model.RoomPrice, new { @class = "form-control", id = "txtRoomPrice" })
                                @Html.ValidationMessageFor(model => model.RoomPrice, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.BookingStatusId)
                                @Html.DropDownListFor(model => model.BookingStatusId, Model.ListOfBookingStatus, new { @class = "form-control", id = "ddBookingStatus" })
                                @Html.ValidationMessageFor(model => model.BookingStatusId, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.RoomTypeId)
                                @Html.DropDownListFor(model => model.RoomTypeId, Model.ListOfRoomType, new { @class = "form-control", id = "ddRoomType" })
                                @Html.ValidationMessageFor(model => model.RoomTypeId, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.RoomCapacity)
                                @Html.TextBoxFor(model => model.RoomCapacity, new { @class = "form-control", id = "txtRoomCapacity" })
                                @Html.ValidationMessageFor(model => model.RoomCapacity, null, new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.RoomDescription)
                                @Html.TextBoxFor(model => model.RoomDescription, new { @class = "form-control", id = "txtRoomDescription" })
                                @Html.ValidationMessageFor(model => model.RoomDescription, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.RoomImage)
                                <input id="UploadImage" type="file" class="form-control" name="roomImage" title="Load Image" onchange="DisplayImage(this)">
                                <img id="imgRoom" height="200" width="200" style="border:solid" />
                            </div>
                        </div>
                    </div>
                </form>
                <div class="modal-footer">
                    <button id="btnSave" type="button" class="btn btn-success">Add</button>
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal" onclick="ResetRoomInformation();">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div style="margin-top: 30px"></div>
<div id="divLoadRoomDetails"></div>
